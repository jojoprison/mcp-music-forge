[project]
name = "mcp-music-forge"
version = "0.1.0"
description = "MCP server + workers for audio download/convert/tag (SoundCloud first)"
readme = "README.md"
requires-python = ">=3.12,<3.13"
authors = [{ name = "mcp-music-forge" }]
license = "MIT"
keywords = ["mcp", "soundcloud", "yt-dlp", "audio", "fastapi", "redis", "arq"]

# project dependencies
dependencies = [
    "mcp>=1.2.0",
    "fastapi>=0.110,<1.0.0",
    "uvicorn>=0.30",
    "uvloop>=0.19",
    "pydantic>=2.6,<3.0",
    "pydantic-settings>=2.4",
    "redis>=5.0",
    "arq>=0.26,<1.0",
    "yt-dlp>=2024.07.01",
    "mutagen>=1.47",
    "structlog>=24.1",
    "loguru>=0.7",
    "tenacity>=8.5",
    "aiofiles>=24.1",
    "httpx[http2]>=0.27",
    "python-dotenv>=1.0",
    "sqlmodel>=0.0.16,<0.1",
    "sqlalchemy>=2.0",
    "sqladmin>=0.16",
    "anyio>=4.4",
    "jinja2>=3.1",
    "python-multipart>=0.0.9",
    # Observability
    "opentelemetry-distro>=0.48b0",
    "opentelemetry-exporter-otlp>=0.48b0",
    "opentelemetry-instrumentation-fastapi>=0.48b0",
    "opentelemetry-instrumentation-logging>=0.48b0",
    "opentelemetry-instrumentation-urllib>=0.48b0",
    "opentelemetry-instrumentation-redis>=0.48b0",
]

[project.optional-dependencies]
# For local development tooling
dev = [
    "pytest>=8.2",
    "pytest-asyncio>=0.23",
    "pytest-cov>=5.0",
    "mypy>=1.10",
    "ruff>=0.5",
    "black>=24.8",
    "pre-commit>=3.7",
    "types-redis>=4.6.0",
    "types-requests>=2.31.0.0",
    "httpx[cli]>=0.27",
]

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
line-length = 80
# Use Ruff for lint only; Black handles formatting

[tool.ruff.lint]
select = ["E", "F", "W", "B", "I", "UP", "N", "S", "C90"]
ignore = ["S101", "S106", "S603", "S607", "S104"]

[tool.ruff.lint.isort]
known-first-party = ["mcp_music_forge", "core", "providers", "storage", "transcoder", "workers", "api"]

[tool.black]
line-length = 80
target-version = ["py312"]
preview = true

[tool.setuptools.packages.find]
where = ["."]
include = [
    "mcp_music_forge",
    "core",
    "providers",
    "storage",
    "transcoder",
    "workers",
    "api",
]

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
strict_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
no_implicit_optional = true
plugins = []
disable_error_code = ["call-arg"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q"
asyncio_mode = "auto"
markers = [
    "e2e: end-to-end tests that may hit network or external services",
    "integration: integration tests requiring services",
]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
branch = true
source = [
    "mcp_music_forge",
    "core",
    "providers",
    "storage",
    "transcoder",
    "workers",
    "api",
]

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.uv]
# uv will honor this project definition and create .venv in project root
package = true

[project.scripts]
mcp-music-forge-mcp = "mcp_music_forge.mcp_app:main"
